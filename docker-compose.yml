version: "3"

services:
  app:
    build:
      context: .
    ports:
      - "8000:8000"
    volumes:
      - ./app:/app
    command: >
      sh -c "python3 manage.py wait_for_db &&
             python3 manage.py migrate &&
             python3 manage.py runserver 0.0.0.0:8000"
    environment:
      - DB_HOST=db
      - DB_NAME=app
      - DB_USER=postgres
      - DB_PASSWORD=password
      - ELASTICSEARCH_DSL_HOSTS=elasticsearch:9200
    depends_on:
      - db
      - elasticsearch

  async_ingestion:
    build:
      context: .
    volumes:
      - ./app:/app
    command: >
      sh -c "python3 manage.py wait_for_db &&
             python3 content/scripts/youtube_video_ingestion.py"
    environment:
      - DB_HOST=db
      - DB_NAME=app
      - DB_USER=postgres
      - DB_PASSWORD=password
      - ELASTICSEARCH_DSL_HOSTS=elasticsearch:9200
    depends_on:
      - db
      - elasticsearch

  async_indexing:
    build:
      context: .
    volumes:
      - ./app:/app
    command: >
      sh -c "python3 manage.py wait_for_db &&
             python3 manage.py rebuild_index --noinput &&
             watch -n 10 python3 manage.py update_index --age=1"
    environment:
      - DB_HOST=db
      - DB_NAME=app
      - DB_USER=postgres
      - DB_PASSWORD=password
      - ELASTICSEARCH_DSL_HOSTS=elasticsearch:9200
    depends_on:
      - db
      - elasticsearch

  db:
    image: postgres:10-alpine
    environment:
      - POSTGRES_DB=app
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=password

  elasticsearch:
    image: launcher.gcr.io/google/elasticsearch2
    ports:
      - "9200:9200"
      - "9300:9300"
